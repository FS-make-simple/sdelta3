#!/bin/bash
# sd3 compression wrapper for sdelta3
# Copyright 2005 by Kyle Sallee
# Distributed under the terms of the SPL
# See /usr/share/sdelta3/LICENSE


compress_out()  {
  rd12()  {
    if  [  "$R1"  !=  "$D1"  ];  then  rm  -f  "$D1";  fi
    if  [  "$R2"  !=  "$D2"  ];  then  rm  -f  "$D2";  fi
  }

  if  case  "${D3##*.}"  in
        7z)   7za    a  $CSWIT  -si    "$R3"  2>/dev/null ;;
        bz2)  bzip2     $CSWIT  -c  >  "$R3"  ;;
        gz)   gzip      $CSWIT  -c  >  "$R3"  ;;
        tgz)  gzip      $CSWIT  -c  >  "$R3"  ;;
        *)    cat                   >  "$R3"  ;;
      esac
  then  rd12;  mv      "$R3"  "$D3"
  else  rd12;  rm  -f  "$R3"
        false
  fi
}


compression()  {
  case  $(  file  -b  "$1"  )  in
          7z*)  echo  "7z"    ;;
       7-zip*)  echo  "7z"    ;;
       bzip2*)  echo  "bzip2" ;;
        gzip*)  echo  "gzip"  ;;
    compress*)  echo  "gzip"  ;;
        *tar*)  echo  "tar"   ;;
  esac
}


is_sdelta3()  { file -b -m $SD3_MAGIC "$1" 2>/dev/null | grep -q sdelta3; }


root()  {
  local  R
         R="${R%.sd3}"
         R="${1%.7z}"
         R="${R%.bz2}"
         R="${R%.gz}"
         R="${R/.tgz/.tar}"
  echo "$R"
}


tmp_root()  {
  local  R
         R="$(  root  "$1"  )"
  
  echo "/tmp/${R##*/}.$RANDOM$RANDOM"
}


uncompress()  {
  case  $(  compression    "$1"  )  in
       7z)  7za    x  -so  "$1"  >  $2  2>/dev/null  ;;
    bzip2)  bzip2     -cd  "$1"  >  $2  ;;
     gzip)  gzip      -cd  "$1"  >  $2  ;;
  esac
}


uncompress_name()  {
  local  T
         T="$(  tmp_root  "$1"  )"
  case  $(  compression   "$1"  )  in
       7z)  echo  "$T"  ;;
    bzip2)  echo  "$T"  ;;
     gzip)  echo  "$T"  ;;
        *)  echo  "$1"  ;;
  esac
}


guess()  {
  local  R
    R="$(  root  "$1"  )"

    if  [  -f  "$1"            ];  then  echo  "$1"
  elif  [  -f  "$R.tar"        ];  then  echo  "$R.tar"
  elif  [  -f  "$R.tar.7z"     ];  then  echo  "$R.tar.7z"
  elif  [  -f  "$R.tar.bz2"    ];  then  echo  "$R.tar.bz2"
  elif  [  -f  "$R.tar.gz"     ];  then  echo  "$R.tar.gz"
  elif  [  -f  "$R.tgz"        ];  then  echo  "$R.tgz"
  elif  [  -f  "$R.sd3.7z"     ];  then  echo  "$R.sd3.7z"
  elif  [  -f  "$R.sd3.bz2"    ];  then  echo  "$R.sd3.bz2"
  elif  [  -f  "$R.sd3.gz"     ];  then  echo  "$R.sd3.gz"
  elif  [  -f  "$R.7z"         ];  then  echo  "$R.7z"
  elif  [  -f  "$R.bz2"        ];  then  echo  "$R.bz2"
  elif  [  -f  "$R.gz"         ];  then  echo  "$R.gz"
                                   else  echo  "$1 not found.";   exit  1
  fi
}


translate()  {
  local  OUT="$2.partial.$RANDOM$RANDOM"

  if      [   "${1}"      !=  "${2}"      ];  then
    if    [   "${1:0-4}"  ==  "${2:0-4}"  ]
    then  cp  "${1}"          "${2}"
    else
      if  case  $(  compression     "$1"  )  in
            7z)     7za    x  -so   "$1"  2>/dev/null  ;;
            bzip2)  bzip2     -cd   "$1"  ;;
            gzip)   gzip      -cd   "$1"  ;;
            tar)    cat             "$1"  ;;
          esac
      then  true
      else  rm  -f  "$OUT";  false
      fi  |
      if  case  "${2##*.}"  in
            7z)   7za    a  $CSWIT  -si    "$OUT"  2>/dev/null ;;
            bz2)  bzip2     $CSWIT  -c  >  "$OUT"  ;;
            gz)   gzip      $CSWIT  -c  >  "$OUT"  ;;
            tgz)  gzip      $CSWIT  -c  >  "$OUT"  ;;
            tar)  cat    -              >  "$OUT"  ;;
          esac
      then  mv      "$OUT"  "$2"
      else  rm  -f  "$OUT";  false
      fi
    fi
  fi
}


if    [  "$1"  == "--help" ]  ||
      ((  $#   <  3       ))
then
  echo      $"sd3 compression wrapper for sdelta3"
  echo      $"Copyright 2005 by Kyle Sallee"
  echo      $"Distributed under the terms of the SPL"
  echo      $"See /usr/share/sdelta3/LICENSE"
  echo
  echo  -e  $"To generate a patch file:  \e[32msd3  \e[34mold  \e[36mnew    \e[32mpatch\e[0m"
  echo  -e  $"To apply    a patch file:  \e[32msd3  \e[34mold  \e[32mpatch  \e[36mnew\e[0m"
  echo      $"Compression types that are automatically detected and supported are:"
  echo       "7za, bzip2, gzip"
  exit  1
elif  [  "$1"  ==  "translate"  ]  &&
      [  -s        "$2"         ]
then  translate    "$2"  "$3"
      exit  0
fi

if    !  [  -f  ${SD3_MAGIC:=/usr/share/sdelta3/magic}  ]
then              SD3_MAGIC=~/usr/share/sdelta3/magic
fi

if  !  [[  -f  $SD3_MAGIC  ]]
then
  echo  $"Unable to identify sdelta3 patches without $SD3_MAGIC installed."
  echo  $"Please reinstall sdelta3 or export SD3_MAGIC"
  echo  $"to specify the location of the file containing sdelta3's magic numbers."
fi


R1="$(  guess            "$1"   )"
R2="$(  guess            "$2"   )"
D1="$(  uncompress_name  "$R1"  )"
D2="$(  uncompress_name  "$R2"  )"

uncompress "$R1"  "$D1"  &
uncompress "$R2"  "$D2"  &

D3="$3"
R3="$1.partial.$RANDOM$RANDOM"

wait

if    is_sdelta3    "$D1"
then  R0="$R2";  D0="$D2"
      R2="$R1";  D2="$D1"
      R1="$R0";  D1="$D0"
fi


if    !  sdelta3 "$D1" "$D2"
then     rm  -f  "$R3";  false
fi    |  compress_out
